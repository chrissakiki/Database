/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coursepackage;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JFrame;


/**
 *
 * @author chriss
 */
public class CourseDIA extends javax.swing.JDialog {
    private Connection connect;
    private int crsid;

    /**
     * Creates new form CourseDIA
     * @param parent
     * @param modal
     * @param connect
     * @param crsid
     */
    public CourseDIA(java.awt.Frame parent, boolean modal,Connection connect, int crsid) {
        
        super(parent, modal);
        initComponents();
        this.connect = connect;
        this.crsid = crsid;
        this.setTitle("option");
        rootPane.setDefaultButton(SAVEbutton);
        this.setResizable(false);
        this.setLocationRelativeTo(this); 
        CREDITScombobox.setSelectedItem("3");
        load();
    }

      private void load(){
        try {
            Statement stmt = connect.createStatement();
            ResultSet rs
                    = stmt.executeQuery("Select * "
                            + "From tbl_courses Where crs_id =" + crsid);
            if (rs.next()) {
                  CODEtext.setText(rs.getString("crs_code"));
                NAMEtext.setText(rs.getString("crs_name"));
          DESCRIPTIONtext.setText(rs.getString("crs_description"));
                 TYPEcombobox.setSelectedItem(rs.getString("crs_type"));
                     CREDITScombobox.setSelectedItem(rs.getString("crs_nb_credits"));
                if(rs.getString("crs_lab").equals("Yes")){
                    LABcheckbox.setSelected(true);
                }else{
                    LABcheckbox.setSelected(false);
                }
                
          
                
               
            }
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CODEtext = new javax.swing.JTextField();
        NAMEtext = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DESCRIPTIONtext = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TYPEcombobox = new javax.swing.JComboBox();
        CREDITScombobox = new javax.swing.JComboBox();
        LABcheckbox = new javax.swing.JCheckBox();
        SAVEbutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Course Code:");

        jLabel2.setText("Course Name:");

        CODEtext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CODEtextKeyTyped(evt);
            }
        });

        NAMEtext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NAMEtextKeyTyped(evt);
            }
        });

        jLabel3.setText("Description:");

        DESCRIPTIONtext.setColumns(20);
        DESCRIPTIONtext.setRows(5);
        DESCRIPTIONtext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DESCRIPTIONtextKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(DESCRIPTIONtext);

        jLabel4.setText("Type:");

        jLabel5.setText("Nb Of Credits:");

        TYPEcombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Major", "Elective" }));

        CREDITScombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3" }));

        LABcheckbox.setText("Lab");

        SAVEbutton.setText("Save");
        SAVEbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAVEbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NAMEtext)
                            .addComponent(CODEtext)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(SAVEbutton)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel3)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TYPEcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CREDITScombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LABcheckbox)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CODEtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NAMEtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TYPEcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(CREDITScombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(LABcheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SAVEbutton)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SAVEbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAVEbuttonActionPerformed
        // TODO add your handling code here:
          if (CODEtext.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Enter a Course Code ", "Error",
                    JOptionPane.WARNING_MESSAGE);
        } else if (NAMEtext.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Enter a Course Name", "Error",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            String coursecode = CODEtext.getText();
            String coursename = NAMEtext.getText();
            String description = DESCRIPTIONtext.getText();
            String type= TYPEcombobox.getSelectedItem().toString();
            int numberofc= Integer.parseInt(CREDITScombobox.getSelectedItem().toString());
            String labb;
            if (LABcheckbox.isSelected()) {
                labb= "Yes";
            } else {
                labb= "No";
            }
            
            try {
                PreparedStatement pstmt;
                if(crsid==0){
                       pstmt = connect.prepareStatement("Insert Into "
                                + "tbl_courses (crs_code,"
                                + "crs_name, crs_description, "
                                + "crs_type, crs_nb_credits, "
                                + "crs_lab) "
                                + "Values ( '" + coursecode + "', "
                                + "'" + coursename + "', '" + description+ "', '"
                                + type + "', " + numberofc + ", '"
                                + labb+ "')");
                }else{
                    pstmt = connect.prepareStatement("Update tbl_courses "
                            + "Set crs_code = '" + coursecode + "', "
                            + "crs_name = '" + coursename + "', "
                            + "crs_description= '" + description + "', "
                            + "crs_type = '" + type + "', "
                            + "crs_nb_credits= " + numberofc + ", "
                            + "crs_lab = '" + labb+ "'" 
                            + "Where crs_id = " + crsid);
                }
                pstmt.execute();
                this.dispose();
            } catch (SQLException ex) {
                System.err.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_SAVEbuttonActionPerformed

    private void CODEtextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CODEtextKeyTyped
        // TODO add your handling code here:
        if (CODEtext.getText().length() > 5) {
            evt.consume();
        }
    }//GEN-LAST:event_CODEtextKeyTyped

    private void NAMEtextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NAMEtextKeyTyped
        // TODO add your handling code here:
                if ((Character.isDigit(evt.getKeyChar())|| NAMEtext.getText().length() > 29)) {
            evt.consume();
        }
    }//GEN-LAST:event_NAMEtextKeyTyped

    private void DESCRIPTIONtextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DESCRIPTIONtextKeyTyped
        // TODO add your handling code here:
                if (DESCRIPTIONtext.getText().length() > 249) {
            evt.consume();
        }
    }//GEN-LAST:event_DESCRIPTIONtextKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseDIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseDIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseDIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseDIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
        
            @Override
            public void run() {
                CourseDIA dialog = new CourseDIA(new javax.swing.JFrame(), true, null, 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CODEtext;
    private javax.swing.JComboBox CREDITScombobox;
    private javax.swing.JTextArea DESCRIPTIONtext;
    private javax.swing.JCheckBox LABcheckbox;
    private javax.swing.JTextField NAMEtext;
    private javax.swing.JButton SAVEbutton;
    private javax.swing.JComboBox TYPEcombobox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
